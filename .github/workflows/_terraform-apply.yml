name: _Terraform Apply

on:
  workflow_call:
    inputs:
      destroy:
        description: "The boolean destroy passed from the caller workflow"
        type: boolean
        default: false
    secrets:
      PIPELINE_TOKEN:
        description: 'The pipeline token passed from the caller workflow'
        required: true
      AWS_REGION:
        description: 'AWS_REGION'
        required: true
      AWS_ROLE:
        description: 'AWS_ROLE'
        required: true

jobs:
  terraform-apply:
    name: "Terraform Apply"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Add terraform as submodule
        run: |
          git config --global credential.helper store
          git submodule add https://${{ secrets.PIPELINE_TOKEN }}@github.com/VitorRoecker/expense-control-terraform.git terraform/modules
        working-directory: .

      - name: "Run - Terraform Init"
        id: init
        run: |
          terraform init -backend=true -backend-config="config/backend.hcl"

      - name: "Run - Terraform Validate"
        id: validate
        run: |
          terraform validate -no-color

      - name: "Run - Terraform Destroy"
        id: destroy
        if: ${{ inputs.destroy == true }}
        run: |
          terraform destroy -auto-approve -var-file="config/terraform.tfvars"

      - name: "Run - Terraform Apply"
        id: terraform-apply
        if: ${{ inputs.destroy == false }}
        run: |
          terraform plan -compact-warnings -no-color -var-file="config/terraform.tfvars" -out terraform-out.tfplan
          terraform apply -auto-approve -input=false -no-color terraform-out.tfplan